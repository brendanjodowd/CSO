str_to_title() %>%
trimws()
counties$id <- counties$id %>%
str_to_title() %>%
trimws()
admin_counties$id <- admin_counties$id %>%
str_to_title() %>%
str_replace("Council","") %>% str_replace("And","and") %>% str_replace("Dun","Dún") %>%
ifelse((str_detect(.,"Cork") | str_detect(.,"Water")|str_detect(.,"Limerick")|str_detect(.,"Galway")) ,
.,
. <- str_replace(.,"County",""))  %>%
trimws()
names(admin_counties)[6] <-  "County.and.City"
names(counties)[6] <-  "County"
map_data <- inner_join(counties, pop , by="County.and.City")
ggplot(map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
ggplot(map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
no_axes <- "theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())"
ggplot(map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
library(rgdal)
library(CSO)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
pop <- get_cso("E1062")
library(rgdal)
library(CSO)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
pop <- get_cso("E1062")
pop <- pop %>%
filter(Census.Year=="2016") %>%
filter(str_detect(Statistic, "Total")) %>%
filter(str_detect(Period.in.which.Built, "later"))
some_map <- readOGR(dsn="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries" ,
layer="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries")
counties <- fortify(some_map , region="FIRST_COUN")
some_map <- readOGR(dsn="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_" ,
layer="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_")
admin_counties <- fortify(some_map , region="ENGLISH")
counties$id <- counties$id %>%
str_to_title() %>%
trimws()
admin_counties$id <- admin_counties$id %>%
str_to_title() %>%
str_replace("Council","") %>% str_replace("And","and") %>% str_replace("Dun","Dún") %>%
ifelse((str_detect(.,"Cork") | str_detect(.,"Water")|str_detect(.,"Limerick")|str_detect(.,"Galway")) ,
.,
. <- str_replace(.,"County",""))  %>%
trimws()
names(admin_counties)[6] <-  "County.and.City"
names(counties)[6] <-  "County"
map_data <- inner_join(counties, pop , by="County.and.City")
no_axes <- "theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())"
ggplot(map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
map_data <- inner_join(counties, pop , by="County.and.City")
map_data <- inner_join(admin_counties, pop , by="County.and.City")
ggplot(map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
map_data_2 <- map_data
map_data_2$new_value <- map_data_2$value %/% 500
map_data_2$new_value <- factor(map_data_2$new_value , levels = c(0,1,2,3,4))
table(map_data_2$new_value)
ggplot(map_data_2)+
geom_polygon(aes(long, lat, group = group, fill = new_value), colour = "grey" , lwd=0.5) +
coord_quickmap()+
eval(parse(text = no_axes)) +
scale_fill_brewer(palette = "Blues" ,
labels=c("< 500", "500-1000", "1000-1500", "1500-2000" , "2000+"),
name="One-off Houses built", drop=FALSE)
ggplot(map_data_2)+
geom_polygon(aes(long, lat, group = group, fill = factor(new_value , levels = c(0,1,2,3,4))),
colour = "grey" , lwd=0.5) +
coord_quickmap()+
eval(parse(text = no_axes)) +
scale_fill_brewer(palette = "Blues" ,
labels=c("< 500", "500-1000", "1000-1500", "1500-2000" , "2000+"),
name="One-off Houses built" , drop=FALSE)
map_data_2$category <- cut(map_data_2$value,
breaks=seq(0,2500,500),
labels=c("< 500", "500-1000", "1000-1500", "1500-2000", "2000+"))
ggplot(map_data_2)+
geom_polygon(aes(long, lat, group = group, fill = category), colour = "grey" , lwd=0.5) +
coord_quickmap()+
eval(parse(text = no_axes)) +
scale_fill_brewer(palette="Blues", name="One-off Houses built", drop = FALSE)
View(statbank)
look <- filter(statbank , str_detect(statbank$Title, "County"))
View(look)
pop2 <- get_cso("E2049")
pop2 <- get_cso("E2049")
library(rgdal)
library(CSO)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
pop <- get_cso("E1062")
pop <- pop %>%
filter(Census.Year=="2016") %>%
filter(str_detect(Statistic, "Total")) %>%
filter(str_detect(Period.in.which.Built, "later"))
some_map <- readOGR(dsn="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries" ,
layer="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries")
counties <- fortify(some_map , region="FIRST_COUN")
some_map <- readOGR(dsn="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_" ,
layer="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_")
admin_counties <- fortify(some_map , region="ENGLISH")
pop2 <- get_cso("E2049")
View(pop2)
pop2 <- pop2 %>% filter(Age.Group=="All ages") %>%
spread(Sex, value)
View(pop2)
pop2$value <- pop2$Female/pop2$Male
pop2 <- filter(pop2, Census.Year==2016)
new_map_data <- inner_join(pop2 , counties , by="County")
View(counties)
some_map <- readOGR(dsn="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries" ,
layer="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries")
counties <- fortify(some_map , region="FIRST_COUN")
some_map <- readOGR(dsn="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_" ,
layer="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_")
admin_counties <- fortify(some_map , region="ENGLISH")
counties$id <- counties$id %>%
str_to_title() %>%
trimws()
admin_counties$id <- admin_counties$id %>%
str_to_title() %>%
str_replace("Council","") %>% str_replace("And","and") %>% str_replace("Dun","Dún") %>%
ifelse((str_detect(.,"Cork") | str_detect(.,"Water")|str_detect(.,"Limerick")|str_detect(.,"Galway")) ,
.,
. <- str_replace(.,"County",""))  %>%
trimws()
names(admin_counties)[6] <-  "County.and.City"
names(counties)[6] <-  "County"
new_map_data <- inner_join(pop2 , counties , by="County")
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
no_axes <- "theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())"
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2(low="red", high = "blue", mid = "white", midpoint = 0)
max(new_map_data$value)
min(new_map_data$value)
scale_fill_gradient2(low="red", high = "blue", mid = "white", midpoint = 0 , limits=c(0.95,1.06)
)
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2(low="red", high = "blue", mid = "white", midpoint = 0 , limits=c(0.95,1.06))
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2(low="red", high = "blue", mid = "white", midpoint = 0 , breaks=c(0.95,1.06))
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2(low="red", high = "blue", mid = "white", midpoint = 0 , limits=c(0.95,1.06))
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_colour_gradient2(low="red", high = "blue", mid = "white", midpoint = 0 , limits=c(0.95,1.06))
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_colour_gradient2(low="red", high = "blue", mid = "white", midpoint = 1 , limits=c(0.95,1.06))
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2(low="red", high = "blue", mid = "white", midpoint = 1 , limits=c(0.95,1.06))
min(new_map_data$value)
max(new_map_data$value)
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2(low="red", high = "blue", mid = "white", midpoint = 1 , limits=c(0.975,1.05))
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2(low="red", high = "blue", mid = "white", midpoint = 1 , limits=c(0.95,1.05))
look <- filter(statbank , str_detect(statbank$Title, "Electoral"))
View(look)
some_map <- data.frame(rjstat::fromJSONstat(map_url))
map_url <- "https://opendata.arcgis.com/datasets/67b560bcb1804636a8f69236d76b7f20_0.geojson"
some_map <- data.frame(rjstat::fromJSONstat(map_url))
try_map <- rjstat::fromJSONstat(map_url)
try_map <- readOGR(rjstat::fromJSONstat(map_url))
library(rgdal)
library(CSO)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
pop <- get_cso("E1062")
pop <- pop %>%
filter(Census.Year=="2016") %>%
filter(str_detect(Statistic, "Total")) %>%
filter(str_detect(Period.in.which.Built, "later"))
some_map <- readOGR(dsn="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries" ,
layer="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries")
counties <- fortify(some_map , region="FIRST_COUN")
some_map <- readOGR(dsn="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_" ,
layer="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_")
admin_counties <- fortify(some_map , region="ENGLISH")
counties$id <- counties$id %>%
str_to_title() %>%
trimws()
admin_counties$id <- admin_counties$id %>%
str_to_title() %>%
str_replace("Council","") %>% str_replace("And","and") %>% str_replace("Dun","Dún") %>%
ifelse((str_detect(.,"Cork") | str_detect(.,"Water")|str_detect(.,"Limerick")|str_detect(.,"Galway")) ,
.,
. <- str_replace(.,"County",""))  %>%
trimws()
names(admin_counties)[6] <-  "County.and.City"
names(counties)[6] <-  "County"
map_data <- inner_join(admin_counties, pop , by="County.and.City")
no_axes <- "theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())"
ggplot(map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
table(map_data_2$new_value)
map_data_2 <- map_data
map_data_2$new_value <- map_data_2$value %/% 500
map_data_2$new_value <- factor(map_data_2$new_value , levels = c(0,1,2,3,4))
table(map_data_2$new_value)
ggplot(map_data_2)+
geom_polygon(aes(long, lat, group = group, fill = new_value), colour = "grey" , lwd=0.5) +
coord_quickmap()+
eval(parse(text = no_axes)) +
scale_fill_brewer(palette = "Blues" ,
labels=c("< 500", "500-1000", "1000-1500", "1500-2000" , "2000+"),
name="One-off Houses built", drop=FALSE)
ggplot(map_data_2)+
geom_polygon(aes(long, lat, group = group, fill = factor(new_value , levels = c(0,1,2,3,4))),
colour = "grey" , lwd=0.5) +
coord_quickmap()+
eval(parse(text = no_axes)) +
scale_fill_brewer(palette = "Blues" ,
labels=c("< 500", "500-1000", "1000-1500", "1500-2000" , "2000+"),
name="One-off Houses built" , drop=FALSE)
pop2 <- get_cso("E2049")
pop2 <- pop2 %>% filter(Age.Group=="All ages") %>%
spread(Sex, value)
pop2$value <- pop2$Female/pop2$Male
pop2 <- filter(pop2, Census.Year==2016)
new_map_data <- inner_join(pop2 , counties , by="County")
ggplot(new_map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2(low="red", high = "blue", mid = "white", midpoint = 1 , limits=c(0.95,1.05))
devtools::use_data(counties , overwrite = TRUE )
devtools::use_data(admin_counties , overwrite = TRUE )
?CSO
??CSO
?get_cso
getwd()
setwd("/home/brendan/R/CSO-temp")
some_map <- readOGR(dsn="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries" ,
layer="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries")
library(rgdal)
library(CSO)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
pop <- get_cso("E1062")
library(rgdal)
library(CSO)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
setwd("/home/brendan/R/CSO-temp")
some_map <- readOGR(dsn="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries" ,
layer="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries")
counties <- fortify(some_map , region="FIRST_COUN")
some_map <- readOGR(dsn="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_" ,
layer="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_")
admin_counties <- fortify(some_map , region="ENGLISH")
counties$id <- counties$id %>%
str_to_title() %>%
trimws()
admin_counties$id <- admin_counties$id %>%
str_to_title() %>%
str_replace("Council","") %>% str_replace("And","and") %>% str_replace("Dun","Dún") %>%
ifelse((str_detect(.,"Cork") | str_detect(.,"Water")|str_detect(.,"Limerick")|str_detect(.,"Galway")) ,
.,
. <- str_replace(.,"County",""))  %>%
trimws()
names(admin_counties)[6] <-  "County.and.City"
names(counties)[6] <-  "County"
View(counties)
View(admin_counties)
counties <- fortify(some_map , region="FIRST_COUN") %>% select(-"group")
counties <- fortify(some_map , region="FIRST_COUN") %>% select(-c("group"))
counties <- fortify(some_map , region="FIRST_COUN") %>% select(-group)
counties <- select(counties,-group)
getwd()
library(rgdal)
library(CSO)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
setwd("/home/brendan/R/CSO-temp")
some_map <- readOGR(dsn="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries" ,
layer="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries")
counties <- fortify(some_map , region="FIRST_COUN")
some_map <- readOGR(dsn="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_" ,
layer="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_")
admin_counties <- fortify(some_map , region="ENGLISH")
counties <- select(counties,-group)
admin_counties <- select(admin_counties,-group)
counties$id <- counties$id %>%
str_to_title() %>%
trimws()
admin_counties$id <- admin_counties$id %>%
str_to_title() %>%
str_replace("Council","") %>% str_replace("And","and") %>% str_replace("Dun","Dún") %>%
ifelse((str_detect(.,"Cork") | str_detect(.,"Water")|str_detect(.,"Limerick")|str_detect(.,"Galway")) ,
.,
. <- str_replace(.,"County",""))  %>%
trimws()
names(admin_counties)[6] <-  "County.and.City"
names(counties)[6] <-  "County"
setwd("/home/brendan/R/CSO")
devtools::use_data(counties , overwrite = TRUE )
devtools::use_data(admin_counties , overwrite = TRUE )
View(counties)
roxygenise()
library(roxygen2)
roxygenise()
unique(admin_counties$County.and.City)
roxygenise()
devtools::install_github("brendanjodowd/CSO", force=TRUE)
library(CSO)
View(counties)
library(dplyr)
library(stringr)
pop <- get_cso("E1062")
pop <- pop %>%
filter(Census.Year=="2016") %>%
filter(str_detect(Statistic, "Total")) %>%
filter(str_detect(Period.in.which.Built, "later"))
map_data <- inner_join(admin_counties, pop , by="County.and.City")
no_axes <- "theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())"
ggplot(map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
library(ggplot2)
pop <- get_cso("E1062")
pop <- pop %>%
filter(Census.Year=="2016") %>%
filter(str_detect(Statistic, "Total")) %>%
filter(str_detect(Period.in.which.Built, "later"))
map_data <- inner_join(admin_counties, pop , by="County.and.City")
no_axes <- "theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank())"
ggplot(map_data)+
geom_polygon(aes(long, lat, group = group, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
View(map_data)
ggplot(map_data)+
geom_polygon(aes(long, lat, group = County.and.City, fill = value), colour = "grey" , lwd=0.5) +
coord_quickmap() + eval(parse(text = no_axes))+
scale_fill_gradient2()
counties <- fortify(some_map , region="FIRST_COUN")
library(rgdal)
library(CSO)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
setwd("/home/brendan/R/CSO-temp")
some_map <- readOGR(dsn="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries" ,
layer="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries")
counties <- fortify(some_map , region="FIRST_COUN")
some_map <- readOGR(dsn="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_" ,
layer="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_")
admin_counties <- fortify(some_map , region="ENGLISH")
counties <- select(counties,-group)
View(counties)
View(admin_counties)
library(rgdal)
library(CSO)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
setwd("/home/brendan/R/CSO-temp")
some_map <- readOGR(dsn="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries" ,
layer="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries")
counties <- fortify(some_map , region="FIRST_COUN")
some_map <- readOGR(dsn="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_" ,
layer="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_")
admin_counties <- fortify(some_map , region="ENGLISH")
#counties <- select(counties,-group)
#admin_counties <- select(admin_counties,-group)
counties$id <- counties$id %>%
str_to_title() %>%
trimws()
admin_counties$id <- admin_counties$id %>%
str_to_title() %>%
str_replace("Council","") %>% str_replace("And","and") %>% str_replace("Dun","Dún") %>%
ifelse((str_detect(.,"Cork") | str_detect(.,"Water")|str_detect(.,"Limerick")|str_detect(.,"Galway")) ,
.,
. <- str_replace(.,"County",""))  %>%
trimws()
names(admin_counties)[6] <-  "County.and.City"
names(counties)[6] <-  "County"
setwd("/home/brendan/R/CSO")
devtools::use_data(counties , overwrite = TRUE )
devtools::use_data(admin_counties , overwrite = TRUE )
library(roxygen2)
roxygenise()
View(counties)
#counties <- select(counties,-group)
#admin_counties <- select(admin_counties,-group)
counties$group <- paste(counties$County , counties$piece , sep = ".")
library(rgdal)
library(CSO)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
setwd("/home/brendan/R/CSO-temp")
some_map <- readOGR(dsn="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries" ,
layer="County_Boundary_Generalised_100M__OSi_National_Statutory_Boundaries")
counties <- fortify(some_map , region="FIRST_COUN")
some_map <- readOGR(dsn="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_" ,
layer="Administrative_Counties_Generalised_100m__OSi_National_Administrative_Boundaries_")
admin_counties <- fortify(some_map , region="ENGLISH")
#counties <- select(counties,-group)
#admin_counties <- select(admin_counties,-group)
counties$group <- paste(counties$County , counties$piece , sep = ".")
admin_counties$group <- paste(admin_counties$County , admin_counties$piece , sep = ".")
counties$id <- counties$id %>%
str_to_title() %>%
trimws()
admin_counties$id <- admin_counties$id %>%
str_to_title() %>%
str_replace("Council","") %>% str_replace("And","and") %>% str_replace("Dun","Dún") %>%
ifelse((str_detect(.,"Cork") | str_detect(.,"Water")|str_detect(.,"Limerick")|str_detect(.,"Galway")) ,
.,
. <- str_replace(.,"County",""))  %>%
trimws()
names(admin_counties)[6] <-  "County.and.City"
names(counties)[6] <-  "County"
setwd("/home/brendan/R/CSO")
devtools::use_data(counties , overwrite = TRUE )
devtools::use_data(admin_counties , overwrite = TRUE )
